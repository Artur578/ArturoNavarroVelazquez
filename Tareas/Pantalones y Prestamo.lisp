(defun pantalones(cantidad)
    (cond ((< cantidad 5)
    '(Tienes que pagar el precio normal))
    ((and (> cantidad 5) (< cantidad 12))
    '(Tienes un descuento de 15% en cada pantalon))
    ((> cantidad 12)
    '(Tienes un descuento de 30% en cada pantalon))
    )
)

(defvar *puntos* nil)
(defun prestamo(nombre historial cantidad salario propiedad)
    (cond ((eq historial 'b)
            (if (>= salario (* cantidad .50))
            (setf *puntos* '5)
            )
            (if (and (>= salario (* cantidad .25)) (<= salario (* cantidad .50)))
            (setf *puntos* '3)
            )
            (if (and (>= salario (* cantidad .10)) (<= salario (* cantidad .25)))
            (setf *puntos* '1)
            )
            (if (>= propiedad (* cantidad 2))
            (setf *puntos* (+ *puntos* 5))
            )
            (if (and (>= propiedad cantidad) (<= propiedad (* cantidad 2)))
            (setf *puntos* (+ *puntos* 3))
            )

            (cond ((>= *puntos* 6)
            '(Eres elegible para el prestamo)
            )
            ((< *puntos* 6)
            '(No eres elegible para el prestamo))
            )
            )
    ((eq historial 'm)
    '(No eres elegible para el prestamo)))
)